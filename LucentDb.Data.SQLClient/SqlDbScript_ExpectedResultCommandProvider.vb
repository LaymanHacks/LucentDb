'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Generated by Merlin Version: 1.0.0.0
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------
Imports System
Imports System.Data
Imports System.Data.Common
Imports System.Data.SqlClient
Imports LucentDb.Data.DbCommandProvider

Namespace LucentDb.Data.SqlDbCommandProvider 

  
Public Class SqlDbScript_ExpectedResultCommandProvider
      Implements IDbScript_ExpectedResultCommandProvider
    
      ReadOnly _dbConnHolder As DbConnectionHolder

      Public Sub New()
          _dbConnHolder = New DbConnectionHolder(DbConnectionName)
      End Sub

      Public ReadOnly Property DbConnectionName() As String Implements IDbScript_ExpectedResultCommandProvider.DbConnectionName
          Get
              Return "LucentDbConnection"
          End Get
      End Property

      Public ReadOnly Property Script_ExpectedResultDbConnectionHolder() As DbConnectionHolder Implements IDbScript_ExpectedResultCommandProvider.Script_ExpectedResultDbConnectionHolder
          Get
              Return _dbConnHolder
          End Get
      End Property
      
    
        ''' <summary>
        ''' Selects one or more records from the Script_ExpectedResult table 
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataDbCommand() As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetGetDataDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_Select")
            command.CommandType = CommandType.StoredProcedure
    
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Updates one or more records from the Script_ExpectedResult table 
        ''' </summary>
      ''' <param name="scriptId" />
      ''' <param name="expectedResultId" />
      ''' <param name="resultIndex" />
      ''' <param name="original_ScriptId" />
      ''' <param name="original_ExpectedResultId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetUpdateDbCommand( ByVal scriptId As Int32,  ByVal expectedResultId As Int32,  ByVal resultIndex As Int32,  ByVal original_ScriptId As Int32,  ByVal original_ExpectedResultId As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetUpdateDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_Update")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ScriptId", SqlDbType.int, scriptId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ExpectedResultId", SqlDbType.int, expectedResultId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ResultIndex", SqlDbType.int, resultIndex))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Original_ScriptId", SqlDbType.int, original_ScriptId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Original_ExpectedResultId", SqlDbType.int, original_ExpectedResultId))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Deletes one or more records from the Script_ExpectedResult table 
        ''' </summary>
      ''' <param name="scriptId" />
      ''' <param name="expectedResultId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetDeleteDbCommand( ByVal scriptId As Int32,  ByVal expectedResultId As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetDeleteDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_Delete")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ScriptId", SqlDbType.int, scriptId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ExpectedResultId", SqlDbType.int, expectedResultId))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Inserts a record into the Script_ExpectedResult table on the database.
        ''' </summary>
      ''' <param name="scriptId" />
      ''' <param name="expectedResultId" />
      ''' <param name="resultIndex" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetInsertDbCommand( ByVal scriptId As Int32,  ByVal expectedResultId As Int32,  ByVal resultIndex As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetInsertDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_Insert")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ScriptId", SqlDbType.int, scriptId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ExpectedResultId", SqlDbType.int, expectedResultId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ResultIndex", SqlDbType.int, resultIndex))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataPageable returns a IDataReader populated with a subset of data from Script_ExpectedResult
        ''' </summary>
      ''' <param name="sortExpression" />
      ''' <param name="page" />
      ''' <param name="pageSize" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataPageableDbCommand( ByVal sortExpression As String,  ByVal page As Int32,  ByVal pageSize As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetGetDataPageableDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_GetDataPageable")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.varchar, sortExpression))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@page", SqlDbType.Int, page))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@pageSize", SqlDbType.Int, pageSize))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetRowCount returns the row count for Script_ExpectedResult
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetRowCountDbCommand() As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetGetRowCountDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_GetRowCount")
            command.CommandType = CommandType.StoredProcedure
    
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function  GetDataByScriptIdExpectedResultId returns a IDataReader for Script_ExpectedResult
        ''' </summary>
      ''' <param name="scriptId" />
      ''' <param name="expectedResultId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByScriptIdExpectedResultIdDbCommand( ByVal scriptId As Int32,  ByVal expectedResultId As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetGetDataByScriptIdExpectedResultIdDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_GetDataByScriptIdExpectedResultId")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ScriptId", SqlDbType.int, scriptId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ExpectedResultId", SqlDbType.int, expectedResultId))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataByExpectedResultId returns a IDataReader for Script_ExpectedResult
        ''' </summary>
      ''' <param name="expectedResultId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByExpectedResultIdDbCommand( ByVal expectedResultId As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetGetDataByExpectedResultIdDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_GetDataByExpectedResultId")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ExpectedResultId", SqlDbType.int, expectedResultId))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataByExpectedResultIdPageable returns a IDataReader populated with a subset of data from Script_ExpectedResult
        ''' </summary>
      ''' <param name="expectedResultId" />
      ''' <param name="sortExpression" />
      ''' <param name="page" />
      ''' <param name="pageSize" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByExpectedResultIdPageableDbCommand( ByVal expectedResultId As Int32,  ByVal sortExpression As String,  ByVal page As Int32,  ByVal pageSize As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetGetDataByExpectedResultIdPageableDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_GetDataByExpectedResultIdPageable")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ExpectedResultId", SqlDbType.int, expectedResultId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.varchar, sortExpression))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@page", SqlDbType.Int, page))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@pageSize", SqlDbType.Int, pageSize))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetRowCount returns the row count for Script_ExpectedResult
        ''' </summary>
      ''' <param name="expectedResultId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByExpectedResultIdRowCountDbCommand( ByVal expectedResultId As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetGetDataByExpectedResultIdRowCountDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_GetDataByExpectedResultIdRowCount")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ExpectedResultId", SqlDbType.int, expectedResultId))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataByScriptId returns a IDataReader for Script_ExpectedResult
        ''' </summary>
      ''' <param name="scriptId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByScriptIdDbCommand( ByVal scriptId As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetGetDataByScriptIdDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_GetDataByScriptId")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ScriptId", SqlDbType.int, scriptId))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataByScriptIdPageable returns a IDataReader populated with a subset of data from Script_ExpectedResult
        ''' </summary>
      ''' <param name="scriptId" />
      ''' <param name="sortExpression" />
      ''' <param name="page" />
      ''' <param name="pageSize" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByScriptIdPageableDbCommand( ByVal scriptId As Int32,  ByVal sortExpression As String,  ByVal page As Int32,  ByVal pageSize As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetGetDataByScriptIdPageableDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_GetDataByScriptIdPageable")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ScriptId", SqlDbType.int, scriptId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.varchar, sortExpression))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@page", SqlDbType.Int, page))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@pageSize", SqlDbType.Int, pageSize))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetRowCount returns the row count for Script_ExpectedResult
        ''' </summary>
      ''' <param name="scriptId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByScriptIdRowCountDbCommand( ByVal scriptId As Int32) As IDbCommand Implements IDbScript_ExpectedResultCommandProvider.GetGetDataByScriptIdRowCountDbCommand
            
            Dim command As New SqlCommand("Script_ExpectedResult_GetDataByScriptIdRowCount")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ScriptId", SqlDbType.int, scriptId))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
  End Class
 End Namespace
  