'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Generated by Merlin Version: 1.0.0.0
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------
Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports LucentDb.Data.DbCommandProvider

Namespace LucentDb.Data.SqlDbCommandProvider
    Public Class SqlDbTestGroupCommandProvider
        Implements IDbTestGroupCommandProvider

        ReadOnly _dbConnHolder As DbConnectionHolder

        Public Sub New()
            _dbConnHolder = New DbConnectionHolder(DbConnectionName)
        End Sub

        Public ReadOnly Property DbConnectionName As String Implements IDbTestGroupCommandProvider.DbConnectionName
            Get
                Return "LucentDbConnection"
            End Get
        End Property

        Public ReadOnly Property TestGroupDbConnectionHolder As DbConnectionHolder _
            Implements IDbTestGroupCommandProvider.TestGroupDbConnectionHolder
            Get
                Return _dbConnHolder
            End Get
        End Property


        ''' <summary>
        '''     Selects one or more records from the TestGroup table
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetDataDbCommand() As IDbCommand Implements IDbTestGroupCommandProvider.GetGetDataDbCommand

            Dim command As New SqlCommand("TestGroup_Select")
            command.CommandType = CommandType.StoredProcedure

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Updates one or more records from the TestGroup table
        ''' </summary>
        ''' <param name="projectId" />
        ''' <param name="name" />
        ''' <param name="isActive" />
        ''' <param name="id" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetUpdateDbCommand(projectId As Int32, name As String, isActive As Boolean, id As Int32) _
            As IDbCommand Implements IDbTestGroupCommandProvider.GetUpdateDbCommand

            Dim command As New SqlCommand("TestGroup_Update")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ProjectId", SqlDbType.int, projectId))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Name", SqlDbType.varchar, name))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@IsActive", SqlDbType.bit, isActive))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Id", SqlDbType.int, id))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Deletes one or more records from the TestGroup table
        ''' </summary>
        ''' <param name="id" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetDeleteDbCommand(id As Int32) As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetDeleteDbCommand

            Dim command As New SqlCommand("TestGroup_Delete")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Id", SqlDbType.int, id))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Inserts a record into the TestGroup table on the database.
        ''' </summary>
        ''' <param name="projectId" />
        ''' <param name="name" />
        ''' <param name="isActive" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetInsertDbCommand(projectId As Int32, name As String, isActive As Boolean) As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetInsertDbCommand

            Dim command As New SqlCommand("TestGroup_Insert")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ProjectId", SqlDbType.int, projectId))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Name", SqlDbType.varchar, name))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@IsActive", SqlDbType.bit, isActive))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetDataPageable returns a IDataReader populated with a subset of data from TestGroup
        ''' </summary>
        ''' <param name="sortExpression" />
        ''' <param name="page" />
        ''' <param name="pageSize" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetDataPageableDbCommand(sortExpression As String, page As Int32, pageSize As Int32) _
            As IDbCommand Implements IDbTestGroupCommandProvider.GetGetDataPageableDbCommand

            Dim command As New SqlCommand("TestGroup_GetDataPageable")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.varchar,
                                                                            sortExpression))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@page", SqlDbType.Int, page))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@pageSize", SqlDbType.Int, pageSize))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetRowCount returns the row count for TestGroup
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetRowCountDbCommand() As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetGetRowCountDbCommand

            Dim command As New SqlCommand("TestGroup_GetRowCount")
            command.CommandType = CommandType.StoredProcedure

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function  GetDataById returns a IDataReader for TestGroup
        ''' </summary>
        ''' <param name="id" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetDataByIdDbCommand(id As Int32) As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetGetDataByIdDbCommand

            Dim command As New SqlCommand("TestGroup_GetDataById")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Id", SqlDbType.int, id))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetActiveData returns a IDataReader for TestGroup with records that are marked as active
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetActiveDataDbCommand() As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetGetActiveDataDbCommand

            Dim command As New SqlCommand("TestGroup_GetActiveData")
            command.CommandType = CommandType.StoredProcedure

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetActiveDataPageable returns a IDataReader populated with paged active records from TestGroup
        ''' </summary>
        ''' <param name="sortExpression" />
        ''' <param name="page" />
        ''' <param name="pageSize" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetActiveDataPageableDbCommand(sortExpression As String, page As Int32, pageSize As Int32) _
            As IDbCommand Implements IDbTestGroupCommandProvider.GetGetActiveDataPageableDbCommand

            Dim command As New SqlCommand("TestGroup_GetActiveDataPageable")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.varchar,
                                                                            sortExpression))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@page", SqlDbType.Int, page))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@PageSize", SqlDbType.Int, pageSize))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetActiveDataRowCount returns the row count for TestGroup
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetActiveDataRowCountDbCommand() As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetGetActiveDataRowCountDbCommand

            Dim command As New SqlCommand("TestGroup_GetActiveDataRowCount")
            command.CommandType = CommandType.StoredProcedure

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetDataByProjectId returns a IDataReader for TestGroup
        ''' </summary>
        ''' <param name="projectId" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetDataByProjectIdDbCommand(projectId As Int32) As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetGetDataByProjectIdDbCommand

            Dim command As New SqlCommand("TestGroup_GetDataByProjectId")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ProjectId", SqlDbType.int, projectId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetDataByProjectIdPageable returns a IDataReader populated with a subset of data from TestGroup
        ''' </summary>
        ''' <param name="projectId" />
        ''' <param name="sortExpression" />
        ''' <param name="page" />
        ''' <param name="pageSize" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetDataByProjectIdPageableDbCommand(projectId As Int32, sortExpression As String,
                                                               page As Int32, pageSize As Int32) As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetGetDataByProjectIdPageableDbCommand

            Dim command As New SqlCommand("TestGroup_GetDataByProjectIdPageable")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ProjectId", SqlDbType.int, projectId))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.varchar,
                                                                            sortExpression))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@page", SqlDbType.Int, page))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@pageSize", SqlDbType.Int, pageSize))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetRowCount returns the row count for TestGroup
        ''' </summary>
        ''' <param name="projectId" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetDataByProjectIdRowCountDbCommand(projectId As Int32) As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetGetDataByProjectIdRowCountDbCommand

            Dim command As New SqlCommand("TestGroup_GetDataByProjectIdRowCount")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ProjectId", SqlDbType.int, projectId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetActiveDataByProjectId returns a IDataReader for TestGroup
        ''' </summary>
        ''' <param name="projectId" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetActiveDataByProjectIdDbCommand(projectId As Int32) As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetGetActiveDataByProjectIdDbCommand

            Dim command As New SqlCommand("TestGroup_GetActiveDataByProjectId")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ProjectId", SqlDbType.int, projectId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetActiveDataByProjectIdPageable returns a IDataReader populated with a subset of data from TestGroup
        ''' </summary>
        ''' <param name="projectId" />
        ''' <param name="sortExpression" />
        ''' <param name="page" />
        ''' <param name="pageSize" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetActiveDataByProjectIdPageableDbCommand(projectId As Int32, sortExpression As String,
                                                                     page As Int32, pageSize As Int32) As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetGetActiveDataByProjectIdPageableDbCommand

            Dim command As New SqlCommand("TestGroup_GetActiveDataByProjectIdPageable")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ProjectId", SqlDbType.int, projectId))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.varchar,
                                                                            sortExpression))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@page", SqlDbType.Int, page))
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@PageSize", SqlDbType.Int, pageSize))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function


        ''' <summary>
        '''     Function GetRowCount returns the row count for TestGroup
        ''' </summary>
        ''' <param name="projectId" />
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function GetGetActiveDataByProjectIdRowCountDbCommand(projectId As Int32) As IDbCommand _
            Implements IDbTestGroupCommandProvider.GetGetActiveDataByProjectIdRowCountDbCommand

            Dim command As New SqlCommand("TestGroup_GetActiveDataByProjectIdRowCount")
            command.CommandType = CommandType.StoredProcedure
            command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@ProjectId", SqlDbType.int, projectId))

            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
        End Function
    End Class
End Namespace
