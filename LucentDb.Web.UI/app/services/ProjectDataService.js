//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
(function () {
    'use strict';

    var serviceId = 'projectDataService';
    angular.module('app').service(serviceId, ['$http', projectDataService]);

    function projectDataService($http) {
        var urlBase = '/api/projects';            

        this.getData = function () {
            return $http.get('/api/projects'/all');
        };

         this.updateProject = function(project) {
            return $http.put('/api/projects'', project);
        };

         this.deleteProject = function(projectId) {
            return $http.Delete('/api/projects'', projectId);
        };

         this.insertProject = function(project) {
            return $http.post('/api/projects'', project);
        };

        this.getDataPageable = function (sortExpression, page, pageSize) { 
            return $http({
                 url: '/api/projects'',
                 method: 'GET',
                 params: {
                     sortExpression : sortExpression || '', 
                     page : page || '', 
                     pageSize : pageSize || ''
                 }
            });
        };

        this.getDataByProjectId = function (projectId) {
            return $http.get('/api/projects/' + projectId + '/projects');
        };

        this.getActiveData = function () {
            return $http.get('/api/projects'/all/active');
        };

        this.getActiveDataPageable = function (sortExpression, page, pageSize) { 
            return $http({
                 url: '/api/projects'/active',
                 method: 'GET',
                 params: {
                     sortExpression : sortExpression || '', 
                     page : page || '', 
                     pageSize : pageSize || ''
                 }
            });
        };

        this.getProjectsForConnectionByConnectionId = function (connectionId) {
            return $http.get('/api/connections/' + connectionId + '/projects/all');
        };

        this.getProjectsForConnectionByConnectionIdPageable = function (connectionId, sortExpression, page, pageSize) { 
            return $http({
                 url: '/api/connections/' + connectionId + '/projects',
                 method: 'GET',
                 params: {
                     connectionId : connectionId || '', 
                     sortExpression : sortExpression || '', 
                     page : page || '', 
                     pageSize : pageSize || ''
                 }
            });
        };


    }
})();
