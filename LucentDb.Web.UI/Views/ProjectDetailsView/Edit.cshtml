@*//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------*@
@model LucentDb.Domain.Entities.ProjectDetailsView


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ProjectDetailsView</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

       <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            	@Html.EditorFor(model => model.ProjectId, new { htmlAttributes = new { @class = "form-control k-textbox" } })
                 
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            	@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control k-textbox" } })
                 
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            	@Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control k-textbox" } })
                 
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.GroupCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            	@Html.EditorFor(model => model.GroupCount, new { htmlAttributes = new { @class = "form-control k-textbox" } })
                 
                @Html.ValidationMessageFor(model => model.GroupCount, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.TestCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            	@Html.EditorFor(model => model.TestCount, new { htmlAttributes = new { @class = "form-control k-textbox" } })
                 
                @Html.ValidationMessageFor(model => model.TestCount, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.ActiveTestCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            	@Html.EditorFor(model => model.ActiveTestCount, new { htmlAttributes = new { @class = "form-control k-textbox" } })
                 
                @Html.ValidationMessageFor(model => model.ActiveTestCount, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.InactiveTestCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            	@Html.EditorFor(model => model.InactiveTestCount, new { htmlAttributes = new { @class = "form-control k-textbox" } })
                 
                @Html.ValidationMessageFor(model => model.InactiveTestCount, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.IsValid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            	@Html.EditorFor(model => model.IsValid, new { htmlAttributes = new { @class = "form-control k-textbox" } })
                 
                @Html.ValidationMessageFor(model => model.IsValid, "", new { @class = "text-danger" })
            </div>
        </div>
        
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
