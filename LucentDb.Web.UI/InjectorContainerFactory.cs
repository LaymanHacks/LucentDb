//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using LucentDb..Data.DbCommandProvider;
using LucentDb..Data.Repository;
using LucentDb..Data.SqlDbCommandProvider;
using SimpleInjector;

namespace LucentDb..Web.UI
{
    public class InjectorContainerFactory
    {
        public static Container BuildSimpleInjectorContainer()
        {
            var container = new Container();
            
            
            container.Register<IDbAssertTypeCommandProvider, SqlDbAssertTypeCommandProvider>();
            container.Register<IAssertTypeRepository, DbAssertTypeRepository>();   
            
            container.Register<IDbConnectionCommandProvider, SqlDbConnectionCommandProvider>();
            container.Register<IConnectionRepository, DbConnectionRepository>();   
            
            container.Register<IDbExpectedResultCommandProvider, SqlDbExpectedResultCommandProvider>();
            container.Register<IExpectedResultRepository, DbExpectedResultRepository>();   
            
            container.Register<IDbProjectCommandProvider, SqlDbProjectCommandProvider>();
            container.Register<IProjectRepository, DbProjectRepository>();   
            
            container.Register<IDbProject_ConnectionCommandProvider, SqlDbProject_ConnectionCommandProvider>();
            container.Register<IProject_ConnectionRepository, DbProject_ConnectionRepository>();   
            
            container.Register<IDbRunHistoryCommandProvider, SqlDbRunHistoryCommandProvider>();
            container.Register<IRunHistoryRepository, DbRunHistoryRepository>();   
            
            container.Register<IDbScriptCommandProvider, SqlDbScriptCommandProvider>();
            container.Register<IScriptRepository, DbScriptRepository>();   
            
            container.Register<IDbScript_ExpectedResultCommandProvider, SqlDbScript_ExpectedResultCommandProvider>();
            container.Register<IScript_ExpectedResultRepository, DbScript_ExpectedResultRepository>();   
            
            container.Register<IDbScriptTypeCommandProvider, SqlDbScriptTypeCommandProvider>();
            container.Register<IScriptTypeRepository, DbScriptTypeRepository>();   
            
            container.Register<IDbTestCommandProvider, SqlDbTestCommandProvider>();
            container.Register<ITestRepository, DbTestRepository>();   
            
            container.Register<IDbTest_ScriptCommandProvider, SqlDbTest_ScriptCommandProvider>();
            container.Register<ITest_ScriptRepository, DbTest_ScriptRepository>();   
            
            container.Register<IDbTestTypeCommandProvider, SqlDbTestTypeCommandProvider>();
            container.Register<ITestTypeRepository, DbTestTypeRepository>();   
            
            
            return container;
          
         }
    }
}

