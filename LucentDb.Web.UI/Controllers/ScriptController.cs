//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Web.Mvc;
using LucentDb.Data.Repository;
using LucentDb.Domain.Entities;

namespace LucentDb.Web.UI.Controllers
{
    public class ScriptController : Controller
    {
        private readonly IScriptRepository _dbScriptRepository;
        private readonly IScriptTypeRepository _dbScriptTypeRepository;
        

        public ScriptController(IScriptRepository dbScriptRepository, IScriptTypeRepository dbScriptTypeRepository)
        {
            _dbScriptRepository = dbScriptRepository;
            _dbScriptTypeRepository = dbScriptTypeRepository; 
            
        }
        
        // GET: Script
        public ActionResult Index()
        {
            return View();
        }

        // GET: Script/Details/5
        [Route("Script/Details/{id}", Name = "GetScriptDetails")]
        public ActionResult Details(Int32 id)
        {
            return View(_dbScriptRepository.GetDataById(id).FirstOrDefault());
        }

        // GET: Script/Create
        public ActionResult Create()
        {
            ViewBag.ScriptTypes = new SelectList(_dbScriptTypeRepository.GetData(), "Id", "Id");
            
            return View();
        }

        // POST: Script/Create
        [HttpPost]
        public ActionResult Create(Script script)
        {
            try
            {
                _dbScriptRepository.Insert(script);
                return RedirectToAction("Index");
            }
            catch
            {
                return View(script);
            }
        }

        // GET: Script/Edit/5
        [Route("Script/Edit/{id}", Name = "GetScriptEdit")]
        public ActionResult Edit(Int32 id)
        {
        	var script = _dbScriptRepository.GetDataById(id).FirstOrDefault();    
            if (script != null) ViewBag.ScriptTypes = new SelectList(_dbScriptTypeRepository.GetData(), "Id", "Id", script.ScriptTypeId);
            
            return View(script);
        }

        // POST: Script/Edit/5
        [Route("Script/Edit/{id}", Name = "PostScriptEdit")]
        [HttpPost]
        public ActionResult Edit(Int32 id, Script script)
        {
            try
            {
                _dbScriptRepository.Update(script);
                return RedirectToAction("Index");
            }
            catch
            {
                return View(script);
            }
        }
   }
}
