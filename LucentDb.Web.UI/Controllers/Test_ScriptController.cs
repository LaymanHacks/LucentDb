//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Web.Mvc;
using LucentDb.Data.Repository;
using LucentDb.Domain.Entities;

namespace LucentDb.Web.UI.Controllers
{
    public class Test_ScriptController : Controller
    {
        private readonly ITest_ScriptRepository _dbTest_ScriptRepository;
        private readonly ITestRepository _dbTestRepository;
        private readonly IScriptRepository _dbScriptRepository;
        

        public Test_ScriptController(ITest_ScriptRepository dbTest_ScriptRepository, ITestRepository dbTestRepository, IScriptRepository dbScriptRepository)
        {
            _dbTest_ScriptRepository = dbTest_ScriptRepository;
            _dbTestRepository = dbTestRepository; 
            _dbScriptRepository = dbScriptRepository; 
            
        }
        
        // GET: Test_Script
        public ActionResult Index()
        {
            return View();
        }

        // GET: Test_Script/Details/5
        [Route("Test_Script/Details/{testId}/{scriptId}", Name = "GetTest_ScriptDetails")]
        public ActionResult Details(Int32 testId, Int32 scriptId)
        {
            return View(_dbTest_ScriptRepository.GetDataByTestIdScriptId(testId, scriptId).FirstOrDefault());
        }

        // GET: Test_Script/Create
        public ActionResult Create()
        {
            ViewBag.Tests = new SelectList(_dbTestRepository.GetData(), "Id", "Id");
            ViewBag.Scripts = new SelectList(_dbScriptRepository.GetData(), "Id", "Id");
            
            return View();
        }

        // POST: Test_Script/Create
        [HttpPost]
        public ActionResult Create(Test_Script test_Script)
        {
            try
            {
                _dbTest_ScriptRepository.Insert(test_Script);
                return RedirectToAction("Index");
            }
            catch
            {
                return View(test_Script);
            }
        }

        // GET: Test_Script/Edit/5
        [Route("Test_Script/Edit/{testId}/{scriptId}", Name = "GetTest_ScriptEdit")]
        public ActionResult Edit(Int32 testId, Int32 scriptId)
        {
        	var test_Script = _dbTest_ScriptRepository.GetDataByTestIdScriptId(testId, scriptId).FirstOrDefault();    
            if (test_Script != null) ViewBag.Tests = new SelectList(_dbTestRepository.GetData(), "Id", "Id", test_Script.TestId);
            if (test_Script != null) ViewBag.Scripts = new SelectList(_dbScriptRepository.GetData(), "Id", "Id", test_Script.ScriptId);
            
            return View(test_Script);
        }

        // POST: Test_Script/Edit/5
        [Route("Test_Script/Edit/{testId}/{scriptId}", Name = "PostTest_ScriptEdit")]
        [HttpPost]
        public ActionResult Edit(Int32 testId, Int32 scriptId, Test_Script test_Script)
        {
            try
            {
                _dbTest_ScriptRepository.Update(test_Script,testId, scriptId);
                return RedirectToAction("Index");
            }
            catch
            {
                return View(test_Script);
            }
        }
   }
}
