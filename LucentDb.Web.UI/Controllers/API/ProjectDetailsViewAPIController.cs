//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using LucentDb.Data.DbCommandProvider;
using LucentDb.Data.Repository;
using LucentDb.Domain.Entities;

namespace LucentDb.Web.UI.Controllers.Api
{
    public class ProjectDetailsViewApiController : ApiController
    {
        private readonly IProjectDetailsViewRepository _dbRepository;

        public ProjectDetailsViewApiController(IProjectDetailsViewRepository dbRepository)
        {
            _dbRepository = dbRepository;
        }
   
        [Route("api/projectDetailsViews/all", Name = "ProjectDetailsViewsGetDataRoute")]
        [HttpGet]
        public IQueryable<ProjectDetailsView> GetData() 
        {
            return _dbRepository.GetData().AsQueryable();
        }

        [Route("api/projectDetailsViews", Name = "ProjectDetailsViewsGetDataPageableRoute")]
        [HttpGet]
        public  HttpResponseMessage  GetDataPageable(String sortExpression, Int32 page, Int32 pageSize) 
        {
            if (page < 1) return Request.CreateResponse(HttpStatusCode.BadRequest);
            var results =_dbRepository.GetDataPageable(sortExpression, page, pageSize);
            var totalCount = _dbRepository.GetRowCount();
            var pagedResults = new PagedResult(page, pageSize, totalCount, results);
            return Request.CreateResponse(HttpStatusCode.OK, pagedResults);
        }

        [Route("api/projectDetailsViews/all/active", Name = "ProjectDetailsViewsGetActiveDataRoute")]
        [HttpGet]
        public IQueryable<ProjectDetailsView> GetActiveData() 
        {
            return _dbRepository.GetActiveData().AsQueryable();
        }

        [Route("api/projectDetailsViews/active", Name = "ProjectDetailsViewsGetActiveDataPageableRoute")]
        [HttpGet]
        public  HttpResponseMessage  GetActiveDataPageable(String sortExpression, Int32 page, Int32 pageSize) 
        {
            if (page < 1) return Request.CreateResponse(HttpStatusCode.BadRequest);
            var results =_dbRepository.GetActiveDataPageable(sortExpression, page, pageSize);
            var totalCount = _dbRepository.GetActiveDataRowCount();
            var pagedResults = new PagedResult(page, pageSize, totalCount, results);
            return Request.CreateResponse(HttpStatusCode.OK, pagedResults);
        }


    }
}
