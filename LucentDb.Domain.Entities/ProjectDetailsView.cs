//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;

namespace LucentDb.Domain.Entities
{
    [Serializable]
    public class ProjectDetailsViewList : Collection<ProjectDetailsView>
    {
        public ProjectDetailsView First()
        {
            return Count > 0 ? base[0] : null;
        }
    }

    [DataContract]
    public class ProjectDetailsView
    {
        private int? _activeTestCount;
        private int? _groupCount;
        private int? _inactiveTestCount;
        private bool _isActive;
        private int? _isValid;
        private string _name;
        private int _projectId;
        private int? _testCount;

        public ProjectDetailsView()
        {
        }

        public ProjectDetailsView(int projectId, string name, bool isActive, int? groupCount, int? testCount,
            int? activeTestCount, int? inactiveTestCount, int? isValid)
        {
            _projectId = projectId;
            _name = name;
            _isActive = isActive;
            _groupCount = groupCount;
            _testCount = testCount;
            _activeTestCount = activeTestCount;
            _inactiveTestCount = inactiveTestCount;
            _isValid = isValid;
        }

        /// <summary>
        ///     Public Property ProjectId
        /// </summary>
        /// <returns>ProjectId as Int32</returns>
        /// <remarks></remarks>
        [DataMember]
        public virtual int ProjectId
        {
            get { return _projectId; }
            set { _projectId = value; }
        }

        /// <summary>
        ///     Public Property Name
        /// </summary>
        /// <returns>Name as String</returns>
        /// <remarks></remarks>
        [DataMember]
        public virtual string Name
        {
            get { return _name; }
            set { _name = value; }
        }

        /// <summary>
        ///     Public Property IsActive
        /// </summary>
        /// <returns>IsActive as Boolean</returns>
        /// <remarks></remarks>
        [DataMember]
        public virtual bool IsActive
        {
            get { return _isActive; }
            set { _isActive = value; }
        }

        /// <summary>
        ///     Public Property GroupCount
        /// </summary>
        /// <returns>GroupCount as Nullable<Int32></returns>
        /// <remarks></remarks>
        [DataMember]
        public virtual int? GroupCount
        {
            get { return _groupCount; }
            set { _groupCount = value; }
        }

        /// <summary>
        ///     Public Property TestCount
        /// </summary>
        /// <returns>TestCount as Nullable<Int32></returns>
        /// <remarks></remarks>
        [DataMember]
        public virtual int? TestCount
        {
            get { return _testCount; }
            set { _testCount = value; }
        }

        /// <summary>
        ///     Public Property ActiveTestCount
        /// </summary>
        /// <returns>ActiveTestCount as Nullable<Int32></returns>
        /// <remarks></remarks>
        [DataMember]
        public virtual int? ActiveTestCount
        {
            get { return _activeTestCount; }
            set { _activeTestCount = value; }
        }

        /// <summary>
        ///     Public Property InactiveTestCount
        /// </summary>
        /// <returns>InactiveTestCount as Nullable<Int32></returns>
        /// <remarks></remarks>
        [DataMember]
        public virtual int? InactiveTestCount
        {
            get { return _inactiveTestCount; }
            set { _inactiveTestCount = value; }
        }

        /// <summary>
        ///     Public Property IsValid
        /// </summary>
        /// <returns>IsValid as Nullable<Int32></returns>
        /// <remarks></remarks>
        [DataMember]
        public virtual int? IsValid
        {
            get { return _isValid; }
            set { _isValid = value; }
        }
    }
}